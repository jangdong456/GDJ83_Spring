<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="com.jang.app.members.MemberDAO">
	<select id="find" parameterType="MemberDTO" resultType="MemberDTO">
		SELECT M_ID FROM MEMBERS 
		WHERE MEMBER_NAME = #{member_name}
	</select>

 	<insert id="addFile" parameterType="MemberFileDTO">
 		INSERT INTO FILES
 		VALUES (FILES_SEQ.NEXTVAL, #{m_id}, #{filename}, #{oriname})
 	</insert>
 
 	<insert id="join" parameterType="MemberDTO">
 		INSERT INTO MEMBERS
 		VALUES (BANK_SEQ.NEXTVAL, #{member_name}, #{member_number},#{phone},
 		#{email}, #{member_id}, #{member_pwd})
 	</insert>

 	<select id="login" parameterType="MemberDTO" resultType="MemberDTO">
 		SELECT M_ID, MEMBER_ID, MEMBER_PWD, MEMBER_NAME
 		FROM MEMBERS
 		WHERE MEMBER_ID = #{member_id}
 	
 	</select>
 	 

 	<select id="detail" parameterType="MemberDTO" resultMap="loginResult">
 		SELECT M.*, INFO.*, F.*
 		FROM MEMBERS M
 			LEFT JOIN
 			PRODUCT_INFO INFO
 			ON M.M_ID = INFO.M_ID
 			LEFT JOIN
 			FILES F
 			ON M.M_ID = F.M_ID
 		WHERE M.M_ID = ${m_id}
 	</select>
 
	 
		<!-- id :  primary key 용도
			column = "컬럼명"
		     property= "type의 setter이름"
		  -->	 
	<resultMap type="MemberDTO" id="loginResult">
		<id column="M_ID" property="m_id"/>
		<result column = "MEMBER_NAME" property="member_name"/>
		<result column = "MEMBER_NUMBER" property="member_number"/>
		<result column = "PHONE" property="phone"/>
		<result column = "EMAIL" property="email"/>
		<result column = "MEMBER_ID" property="member_id"/>
		<result column = "MEMBER_PWD" property="member_pwd"/>
 		
 		<!-- 1:1 -->
 		<association property="memberFileDTO" javaType="memberFileDTO">
 			<id column="FILENUM" property="filenum"/>
 			<result column="FILENAME" property="filename"/>
 			<result column="ORINAME" property="oriname"/>
 		</association>
 		
		<!-- (멤버)1:N(계좌) -->
	
		<collection property="dtos" javaType="java.util.List" ofType="AccountDTO">
			<id column="PRODUCT_INFO_ID" property="product_info_id"/>
			<result column="PRODUCT_ID" property="product_id"/>
			<result column="M_ID" property="m_id"/>
			<result column="JOIN_DATE" property="join_date"/>
			<result column="ACCOUNT_NUMBER" property="account_number"/>
			<result column="BALANCE" property="balance"/>
		</collection>	
	</resultMap>



 	<update id="update" parameterType="MemberDTO">
 		UPDATE MEMBERS SET MEMBER_NAME=#{member_name}, PHONE=#{phone}, EMAIL=#{email}
 		<!--  WHERE MEMBER_ID = #{member_id} -->
 		WHERE M_ID = #{m_id}
 	</update>
 	
 	<delete id="delete" parameterType="MemberDTO">
 		DELETE MEMBERS WHERE MEMBER_ID = #{member_id}
 	</delete>

 </mapper>